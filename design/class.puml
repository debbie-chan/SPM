@startuml Class
!include style.puml

package User {
    User <|.. Admin
    User <|.. Trainer
    User <|.. Learner
    
}

package Course {
    Trainer -- Class
    Learner -- Class
    Course *-- Class
    Class *-- Chapter
    Class *-- GradedQuiz
    Chapter *-- UngradedQuiz
}

abstract class User #technology {
    - userID: String
    - username: String
    - password: hash
    - designation: String
    - department: String
    + addUser()
    + editUser()
    + deleteUser()
    + searchUser()
}

class Admin #technology {

}

class Trainer #technology {
    - AssignedCourses: List

}

class Learner #technology {
    - enrolledCourses: List
    - attemptedCourses: List
    - completedCourses: List
    + SelfEnroll(CourseID): Boolean
}

class Course #technology {
    - courseID: String
    - courseName: String
    - courseDescription: String
    - enrolledLearners: List
    - preRequisites: List
}

class Class #technology {
    - classID: String
    - className: String
    - classSize: int
    - startDate: Date
    - endDate: Date
    - startTime: Time
    - endTime:Time
    - trainerName:String
    - maxEnrollment: int
    - enrollmentStartDate: Date
    - enrollmentEndDate: Date
}

class Chapter #technology {
    - sectionID: String
    - sectionName: String
    - courseMaterials
}

package Quiz {
    Quiz <|.. GradedQuiz
    Quiz <|.. UngradedQuiz
    Quiz -- Question
    Question -- GradeableQuestion
    Gradeable -- GradeableQuestion
}

abstract class Quiz #technology {
    - quizID: String
    - quizName: String
    - quizDuration: Time
    
}

class Question #technology {
    - DEFAULT_GUESS = 0
    - options: Array
    - guess: int

}

interface Gradeable #technology {
    + mark(): int
}

abstract class GradeableQuestion #technology {
    + mark(): int
    + lock(): Gradeable
}



class GradedQuiz #technology {
    - totalScore: int
    - learnerScore: int
}

class UngradedQuiz #technology {
    - passed: Boolean
}

' class CourseDataAccess #motivation {

' }

' class CRDataAccess #motivation {
'     + Create(CRDetails)
'     + findLearner()
' }

' class DataAccess #motivation {

' }

' class Authenticate #business {

' }

' class Controller #implementation {

' }
@enduml